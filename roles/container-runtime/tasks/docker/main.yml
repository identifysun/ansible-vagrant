---
- name: Create docker system user group
  group:
    name: docker
    state: present

- name: Create docker system user
  user:
    name: docker
    comment: "Docker user"
    shell: /sbin/nologin
    state: present
    system: yes
    groups: docker

- name: Copy docker archive to tmp directory
  copy:
    src: "{{ binaries_path }}/{{ docker_archive_name }}"
    dest: "{{ tmp_dir }}"

- name: Extract {{ docker_archive_name }} file
  unarchive:
    src: "{{ tmp_dir }}/{{ docker_archive_name }}"
    dest: "{{ tmp_dir }}"
    remote_src: yes
    list_files: yes
  register: docker_unarchive

- name: Copy docker command file to {{ bin_dir }}
  copy:
    src: "{{ tmp_dir }}/{{ item }}"
    dest: "{{ bin_dir }}/{{ item | basename }}"
    mode: 0755
    remote_src: yes
  with_items: "{{ docker_unarchive.files[1:] }}"

- name: Copy Docker engine service files from host
  template:
    src: "docker/{{ item }}.j2"
    dest: "{{ systemd_service_dir }}/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - docker.service
    - docker.socket
  register: change_system_service

- name: Ensure docker config directory exists
  file: path="{{ docker_config_dir }}" state=directory

- name: Copy Docker daemon.json file
  template:
    src=docker/daemon.json.j2
    dest={{ docker_config_dir }}/daemon.json
  notify:
    - restart docker

- name: Enable and start Docker socket
  when: change_system_service is succeeded
  systemd:
    name: docker.socket
    daemon_reload: yes
    state: started
    enabled: yes
  register: docker_socket_started

- name: Enable and restart Docker engine
  systemd:
    name: docker
    daemon_reload: yes
    state: restarted
    enabled: yes
  register: started_docker
